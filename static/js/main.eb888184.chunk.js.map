{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","_ref$label","label","_ref$required","required","_ref$onChange","onChange","_useState","useState","concat","Math","random","toString","slice","id","_slicedToArray","_useState3","_useState4","touched","setToched","hasError","htmlFor","classNames","type","placeholder","event","target","onBlur","NewMovie","onAdd","_useState2","count","setCount","setTitle","_useState5","_useState6","setDescription","_useState7","_useState8","setImgUrl","_useState9","_useState10","setImdbUrl","_useState11","_useState12","setImdbId","isDisabledButton","trim","onSubmit","preventDefault","currentCount","disabled","App","moviesFromServer","setMovies","moviesOnPage","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eb888184.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange = () => {},\n}) => {\n  // generage a unique id once on component load\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  // To show errors only if the field was touched (onBlur)\n  const [touched, setToched] = useState(false);\n  const hasError = touched && required && !value;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setToched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import { FormEvent, useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd : (movie: Movie) => void\n};\n\nexport const NewMovie = ({ onAdd }: Props) => {\n  const [count, setCount] = useState(0);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n  const isDisabledButton\n  = !title.trim() || !imgUrl.trim() || !imdbUrl.trim() || !imdbId.trim();\n\n  const resetForm = () => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n    onAdd({\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    });\n    setCount(currentCount => currentCount + 1);\n    resetForm();\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        required\n        onChange={setTitle}\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={setDescription}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={setImgUrl}\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={setImdbUrl}\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={setImdbId}\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            disabled={isDisabledButton}\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const addMovie = (movie:Movie) => {\n    setMovies(moviesOnPage => ([...moviesOnPage, movie]));\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}